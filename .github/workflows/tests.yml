name: Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [
      "master"
    ]
  push:
    branches: [
      "master"
    ]

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read

    outputs:
      src: ${{ steps.filter.outputs.src }}
      composer: ${{ steps.filter.outputs.composer }}

    name: Check changes

    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          src:
            - 'src/**'
          composer:
            - 'composer.json'
          phpunit:
            - 'phpunit.xml.dist'

  ci:
    runs-on: ${{ matrix.os }}
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' || needs.changes.outputs.composer == 'true' }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.3, 8.4]
        dependency-version: [prefer-lowest, prefer-stable]

    name: Tests P${{ matrix.php }} - ${{ matrix.os }} - ${{ matrix.dependency-version }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: dom, mbstring, zip
        coverage: pcov

    - name: Get Composer cache directory
      id: composer-cache
      shell: bash
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: dependencies-php-${{ matrix.php }}-os-${{ matrix.os }}-version-${{ matrix.dependency-version }}-composer-${{ hashFiles('composer.json') }}
        restore-keys: dependencies-php-${{ matrix.php }}-os-${{ matrix.os }}-version-${{ matrix.dependency-version }}-composer-

    - name: Install Composer dependencies
      run: composer update --${{ matrix.dependency-version }} --no-interaction --prefer-dist

    - name: Run tests
      run: php ./vendor/bin/pest
